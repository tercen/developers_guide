[{"path":"index.html","id":"introduction","chapter":"Introduction","heading":"Introduction","text":"guide outlines design, develop share apps Tercen.read guide? :\ncurious wish build app Tercen, guide.read guide? :\ncurious wish build app Tercen, guide.Acknowledgement:\nlike thank users feedback. helped us improve Tercen.Acknowledgement:\nlike thank users feedback. helped us improve Tercen.Feedback:\nwish give feedback please hesitate create entry issue tracker.Feedback:\nwish give feedback please hesitate create entry issue tracker.Motivation:\nTercen promotes collaboration data analysis. everyone can code even\nwants , everyone benefit explosion data code\ncurrently taking place.\nTercen allows non programmers (e.g. biologists) explore data \nallows programmers (e.g. bioinformaticians) upload code (web-apps)\nbiologist use. offering services believe biologist get\nempowered can claim back control data. bioinformatician gets\nliberated operational details day day analysis demands \nbiologist. summed phrase:Motivation:\nTercen promotes collaboration data analysis. everyone can code even\nwants , everyone benefit explosion data code\ncurrently taking place.\nTercen allows non programmers (e.g. biologists) explore data \nallows programmers (e.g. bioinformaticians) upload code (web-apps)\nbiologist use. offering services believe biologist get\nempowered can claim back control data. bioinformatician gets\nliberated operational details day day analysis demands \nbiologist. summed phrase:Tercen empowers biologist liberates bioinformatician.Discover incredible capabilities platform can\nbuild useful exciting apps directly top Tercen ease - whether\n’re public apps, ’re building team’s private apps.See others built Tercen, chat developers Community,\nexplore documentation get sense can .Check Tercen Github existing apps.Check Tercen Explore section discover example projects.","code":""},{"path":"guidelines.html","id":"guidelines","chapter":"1 Guidelines","heading":"1 Guidelines","text":"want developers great experience building Tercen Platform.\nbelieve building vibrant developer ecosystem around Tercen benefits\neveryone involved, helps mission make data analysis accessible \nwider community.’ve written guidelines anyone using Tercen’s products services,\nshow use Tercen APIs, share best practices ,\n, continue build new exciting products services., like everything life, rules engagement \n’ve drawn developer guidelines. Yes, ’re written legal\nterms, protect us , ’ve tried ensure simple \npossible. want point towards opportunities rather focusing \ncan’t done.guidelines sit alongside, addition \nTerms Service \nPrivacy Policy \nplease make sure ’ve read understand documents. feel \nmisusing products services, reserve right withdraw access\nproducts services entirely.","code":""},{"path":"guidelines.html","id":"legal-text","chapter":"1 Guidelines","heading":"Legal text","text":"starting work, ’ll ask confirm ’re happy comply \nspirit letter guidelines.Please use Tercen’s products services responsibly. products, services\nbrand really important us, ask anything\nmight damage .expect data produced Tercen’s products represented transparently\nhonestly. Don’t misrepresent data metrics created products.\nexpect use products services help serve customers.\nDon’t re-sell, re-purpose license, data obtained Tercen. Don’t use\nproducts create service competes Tercen infringes \ncopyright. Keeping customers’ data secure important thing \nTercen . Don’t use spiders, robots crawlers, data mining similar tools\nscrape Tercen Website APIs.Tercen needs access monitor access API don’t block us \n. Respect rate-limits. Don’t overuse APIs resources – \nexpect comply fair usage guidelines publish time time.\nidea products can improved like\ntry something experimental please let us know ’d happy \ndiscuss .can use logo branding right , please\ndon’t anything damage brand integrity misleading \nconfusing customers - includes using logo part logo,\nusing Tercen name app name anything else considered\nabuse branding, logos copyrighted materials.Treat customers data responsibly.\nKeeping customers’ data secure important thing Tercen .\ngo considerable lengths ensure data sent Tercen \nhandled securely.expect others access customers’ data treat \nlevel trust responsibility.terms developers include:must appropriate measures place protect information \nreceive Tercen unauthorized access, use, disclosure.must use data need build product service.must end user agreement privacy policy place respect\ncustomers - must compatible Tercen’s terms.must ensure ’re meeting legal obligations terms \napplicable data protection consumer protection; don’t use Tercen’s products\nconnection data don’t permission process.must able meet requirements European Union’s General Data\nProtection Regulation (GDPR) data process falls within \nscope legislation fulfill subject access requests required. \naddition breach notifications required GDPR, ’ll notify Tercen \npersonal data breaches within 72 hours becoming aware breach.must grant Tercen permission audit data processing activities.\ncan include independently produced audit reports.developer platform business evolves, guidelines.\n’d love get touch ’ve feedback suggestions \ncan make better.know occasionally things can go wrong mistakes can made. \ntime concerned guidelines may breached, please\nnotify us soon become aware. guidelines may change time,\ncome back check periodically.Thanks reading far - ’re excited see ’ll build!","code":""},{"path":"core-concepts.html","id":"core-concepts","chapter":"2 Core concepts","heading":"2 Core concepts","text":"","code":""},{"path":"core-concepts.html","id":"tercen-modules","chapter":"2 Core concepts","heading":"Tercen modules","text":"three main types Tercen modules:TemplatesAppsOperatorsA researcher wanting complete workflow data analysis (e.g. RNA-seq, flow cyto,\netc.) chooses one workflows expressed list template. \ntemplate therefore represents highest level app defines \nset many steps sequence achieve complete analysis. \ntemplate high-level workflow (e.g. RNA-seq, flow cyto, etc.).researcher wanting specific statistical process (e.g. quality control, two\ngroup analysis, enrichment analysis, etc.) chooses list apps.\napp therefore represents second highest level app defines \nfocused set steps visuals achieve one particular statistical objective.researcher wanting specific operator function (e.g. scale, log, multiplication,\naddition subtraction, etc.) chooses list operators.\noperator therefore represents single computational step. \ntypically single R Python function.summary researcher wishing full end--end workflow chooses template,\nspecific data process chooses workflow, specific computation chooses\noperator.app built, may added app library can \naccessed researchers.Deciding build determined like app achieve.\nfirst two, template workflow, need programming experience,\noperator .building type module explained following chapters.","code":""},{"path":"core-concepts.html","id":"template","chapter":"2 Core concepts","heading":"Template","text":"programming knowledge required build template.\nbuilt using Tercen user interface deployed within Tercen.","code":""},{"path":"core-concepts.html","id":"app","chapter":"2 Core concepts","heading":"App","text":"programming knowledge required build app.\nbuilt using Tercen user interface deployed within Tercen.","code":""},{"path":"core-concepts.html","id":"operator","chapter":"2 Core concepts","heading":"Operator","text":"Programming knowledge required build operator using number \nprogramming languages (R, Python, Rust, etc.). code put Github\napp library find.Currently Tercen made convenient R package working Tercen API,\naim quickly cater programming languages (Python, Matlab etc.)\nfinal release.command line function can also deployed operator. \ndone using docker concept.","code":""},{"path":"setting-up-tercen-studio.html","id":"setting-up-tercen-studio","chapter":"3 Setting up Tercen Studio","heading":"3 Setting up Tercen Studio","text":"wish develop operators need set development environment.regular programmer already environment.templates apps need development environment Tercen contains features required build .","code":""},{"path":"setting-up-tercen-studio.html","id":"installing-tercen-studio","chapter":"3 Setting up Tercen Studio","heading":"Installing Tercen Studio","text":"1. Install docker-composeFirst need install docker-compose.Windows:use Windows, can install Docker-Desktop Windows includes docker-compose.Advise: Select WSL 2 backend system option installing Windows.Mac Linux:Check install docker-compose Mac Linux.2. Clone tercen-studio repositoryThen, get tercen-studio cloning following repository:need create tercen network running following command.latest instructions install Tercen Studio can found \nREADME Tercen Studio GitHub repository.","code":"git clone https://github.com/tercen/tercen_studio.git\ncd tercen_studiodocker network create tercen"},{"path":"setting-up-tercen-studio.html","id":"starting-tercen-studio","chapter":"3 Setting up Tercen Studio","heading":"Starting Tercen Studio","text":"docker-compose installed tercen-studio repository cloned, can start tercen running:can run Tercen going http://127.0.0.1:5402.Username: adminUsername: adminPassword: adminPassword: adminYou can run RStudio going http://127.0.0.1:8787/.Username: rstudioUsername: rstudioPassword: tercenPassword: tercenNow ’re set!","code":"docker-compose up -d"},{"path":"general-workflow.html","id":"general-workflow","chapter":"4 General workflow","heading":"4 General workflow","text":"Lets go general approach create R operator Tercen.\ndetailed walk (tutorial) example outlined next\nchapter linear regression operator built scratch.Building operator requires following sequential steps:Design operatorSetup github repositorySetup input projectionConnecting TercenTestingManaging input parametersManaging R packagesDeploy","code":""},{"path":"general-workflow.html","id":"design-the-operator","chapter":"4 General workflow","heading":"Design the operator","text":"first step define input projection output relation.\nTercen, operator shall take input table return table. Remember:“Table , table !”understand input table output table. input table defined\ndata input projection Tercen output table computed\noperator. output table (also called computed table) \nrelated input table output relation.input project projection data step used \noperator. example projection composed y-axis, x-axis,\nrow, col, color, label. input project determines \nstructure data given operator. operator computes\nsimple mean use y-axis, row, col projection. allows\nmean computed per cell. linear regression operator like lm might\nuse projection y-axis, x-axis, row, col. allows lm\ncomputed per cell.output relation relation calculated output \ninput values. example:relation per Cell?relation per Column?relation per Row?relation data?Per Cell example : Let’s say operator used projection row col operator calculates mean computed cell (.e. per row/col), per cell relationship.Per Column example: Let’s say operator used project row col operator performed clustering columns, column relationship.data example: Let’s say operator used project row col operator calculated total mean data (.e. across rows cols), data relationship.Steps designing operatorUnderstand Tercen conceptsLook existing operatorsDecide variables needed input projectionDecide values need computed output relations created","code":""},{"path":"general-workflow.html","id":"set-up-a-github-project","chapter":"4 General workflow","heading":"Set up a GitHub project","text":"operators currently developed GitHub. required \nGitHub account develop operator, operator implemented \nGitHub repository.order get started, easiest way use one GitHub repository\ntemplates prepared:minimal template R operatorstemplate R operatorstemplate Shiny operatorstemplate Docker operatorstemplate Python operatorsSteps starting operator repositoryGet GitHub accountChoose operator nameCreate operator repository GitHub based template (see )Clone repo local RStudio contained Tercen Studio","code":""},{"path":"general-workflow.html","id":"setup-the-input-data","chapter":"4 General workflow","heading":"Setup the input data","text":"can done local environment cloud instance Tercen.Login Tercen (either local cloud)Prepare data defining cross-tab projection using data step.Note project data step URL pattern: /w/workflowId/ds/stepId, workflowId stepId unique workflow data step identifiers, respectively. identifiers used next step get data data step.","code":""},{"path":"general-workflow.html","id":"connecting-to-tercen","chapter":"4 General workflow","heading":"Connecting to tercen","text":"cloned github operator project local RStudio \nsetup Tercen data projection, can code test operator locally.wish test local version Tercen, require\nset tercen.service system variable.Load data local instance TercenEach data step uniqueworkflowId stepId combination.Connecting Tercen cloudAdditional system variable required order connect data step \nTercen cloud.uuuu username pppp password, specific\nusername password.","code":"options(\"tercen.workflowId\"= \"8a8845f6a5eeff27ce33fd382444de88\")\noptions(\"tercen.stepId\"= \"5191724b-3963-4e34-af58-7977cc61e5b1\")options(\"tercen.serviceUri\"= \"https://tercen.com/api/v1/\")\noptions(\"tercen.username\"= \"uuuu\")\noptions(\"tercen.password\"= \"pppp\")"},{"path":"general-workflow.html","id":"managing-input-parameters","chapter":"4 General workflow","heading":"Managing input parameters","text":"operator file called operator.json define parameters \nuser can set using operator.deploying, please think parameters required modify file.","code":""},{"path":"general-workflow.html","id":"managing-r-packages","chapter":"4 General workflow","heading":"Managing R packages","text":"newly created operators requires correct packages loaded.\nInstall packages require using standard install procedures, \nrecommend following:install.packages()remotes::install_github()Just deploy operator, necessary setup package\nmanagement system. Tercen operator manages packages using renv system.\nrenv system allows packages required recorded\nrenv.lock file.generate use:done push repository github.","code":"renv::init() "},{"path":"general-workflow.html","id":"deploy","chapter":"4 General workflow","heading":"Deploy!","text":"satisfied operator, can release .Document operatorEdit README.md describe operator design usage. documentation contain:general description operatorA general description operatorA description input projectionsA description input projectionsA description output relationsA description output relationsPrepare operator testingIt’s always good prepare unit tests ran new version Tercen released.include test, need create tests subdirectory project directory. must include:test input filea test input filean expected output filean expected output filea JSON file containing information testa JSON file containing information testInitiate package version controlThe ability run operator exactly packages used developed essential reproducible science. order ensure reproducibility, can associate packages versions operator initiating project-local environment private libraries subdirectory.Push GitHub repositoryOnce everything ready, simply need push modifications GitHub repository created .possible secure authentication required GitHub\npush changes first time. One solution get personal access token\n(PAT) GitHub https://github.com/settings/tokens.\ncan click Generate new token, name select repo scope. \nmindful expiration setting well., can copy token paste RStudio running following\ncommand R console:Note credentials package installed default Tercen Studio.good introduction Git RStudio happygitwithr.Install operatorIf want install directly Tercen, need \ncreate release GitHub. operators version controlled.operators git repository installable,\ngit URL tag version number required researcher \ninstall Tercen.","code":"credentials::set_github_pat()"},{"path":"walkthrough-example-r-operator.html","id":"walkthrough-example-r-operator","chapter":"5 Walkthrough example: R operator","heading":"5 Walkthrough example: R operator","text":"learn concrete example create R operator Tercen. goal create operator performing linear regression input data returning slope intercept model.","code":""},{"path":"walkthrough-example-r-operator.html","id":"designing-the-operator","chapter":"5 Walkthrough example: R operator","heading":"Designing the operator","text":"first step define input projection output relation. Tercen, operator shall take input table return table. Remember:“Table , table !”want perform linear regression values projected y axis values projected x axis, per cell. example, output intercept slope model, per cell. operator model can seen follow:","code":""},{"path":"walkthrough-example-r-operator.html","id":"setting-up-the-project","chapter":"5 Walkthrough example: R operator","heading":"Setting up the project","text":"Make sure tercen-studio properly set Tercen RStudio run locally (respectively http://127.0.0.1:5402 http://127.0.0.1:8787/). Otherwise, please refer Chapter 2.1. Create GitHub repository templateCreate new GitHub repository account based Tercen R operator template (https://github.com/tercen/templateR_operator). Click green button Use template Tercen template repository.can create repository based template. Choose explicit name (, lm_operator).Now repository initiated GitHub account, go back RStudio Server (http://127.0.0.1:8787/). Create new project clicking File > New project > Version control > Git.asked URL repository (put newly created one) name project. Now, local project include skeleton:main.R: main operator scriptmain.R: main operator scriptworkspace.R: local testing scriptworkspace.R: local testing scriptoperator.json: operator metadataoperator.json: operator metadataREADME_template.md: operator documentation templateREADME_template.md: operator documentation templatedoc directory: includes dev_commands.md file, contains useful development command lines.doc directory: includes dev_commands.md file, contains useful development command lines.2. Set Tercen input projectionIn example, use khan dataset (available https://github.com/tercen/khan_data). First, start Tercen locally (http://127.0.0.1:5402) set pairwise projection measurement different tissues. data step interest look follow:Note data step URL includes pattern: /w/WORKF+LOWID/ds/DATASTEPID, WORKFLOWID DATASTEPID unique workflow data step identifiers, respectively. identifiers used next step within RStudio get data data step.","code":""},{"path":"walkthrough-example-r-operator.html","id":"develop-the-operator-locally","chapter":"5 Walkthrough example: R operator","heading":"Develop the operator locally","text":"Now RStudio project Tercen projection set , can code test operator locally follow:Open workspace.ROpen workspace.RReplace data step workflow IDs taken Tercen data step URL workspace.R:Replace data step workflow IDs taken Tercen data step URL workspace.R:Code operator. , implement function .lm() performs linear regression input data frame return slope intercept model.Execute code check results TercenNote recommend implement following sanity checks creating operator:check presence expected inputs (, x y axes)check presence expected inputs (, x y axes)use try() function test main function implemented (, lm())use try() function test main function implemented (, lm())","code":"\nlibrary(tercen)\nlibrary(dplyr)\n\noptions(\"tercen.workflowId\" = \"WORKFLOWID\")\noptions(\"tercen.stepId\"     = \"DATASTEPID\")\ndo.lm <- function(df) {\n  out <- data.frame(\n    .ri = df$.ri[1],\n    .ci = df$.ci[1],\n    intercept = NaN,\n    slope = NaN\n  )\n  \n  mod <- lm(.y ~ .x, data = df)\n  \n  out$intercept <- mod$coefficients[1]\n  out$slope <- mod$coefficients[2]\n  \n  return(out)\n}\n\nctx <- tercenCtx()  %>%          # Get data from the data step\n  select(.x, .y, .ri, .ci) %>%   # select variables of interest\n  group_by(.ri, .ci) %>%         # group by row and column (\"per cell\")\n  do(do.lm(.)) %>%               # do the linear model\n  ctx$addNamespace() %>%         # add namespace\n  ctx$save()                     # push results back to Tercen using the API"},{"path":"deploying-an-r-operator.html","id":"deploying-an-r-operator","chapter":"6 Deploying an R operator","heading":"6 Deploying an R operator","text":"Now working R operator Tercen, want deploy ! now document, prepare tests release linear regression operator.","code":""},{"path":"deploying-an-r-operator.html","id":"documenting-the-operator","chapter":"6 Deploying an R operator","heading":"Documenting the operator","text":"Edit README.md describe operator design usage. documentation contain:general description operatorA general description operatorA description input projectionsA description input projectionsA description output relationsA description output relationsFor example, lm operator documentation looks:DescriptionThe lm operator performs linear regression Tercen.UsageDetailsThe lm operator performs linear regression cell returns slope intercept model.","code":""},{"path":"deploying-an-r-operator.html","id":"deploy-1","chapter":"6 Deploying an R operator","heading":"Deploy!","text":"1. Copy code main.R scriptOnce confident enough operator working testing locally, can copy code main.R file.Make sure include options() calls needed local development step:2. Initiate renvThe ability run operator exactly packages used developed essential reproducible science. order ensure reproducibility, can associate packages versions operator using init() function renv package:initiate project-local environment private R library renv subdirectory.3. Push GitHub repositoryOnce everything ready, simply need push modifications GitHub repository created .want install directly Tercen, need create release GitHub.4. Notify communityCurrently, ask send email support@tercen.com containing description link operators app git repository, Tercen support manually test add app-library thus allowing others access . currently building web entry point researchers browse apps offered community.","code":"\n# The following lines shall not be included into main.R:\noptions(\"tercen.workflowId\" = \"wwww\")\noptions(\"tercen.stepId\"     = \"dddd\")\n\ngetOption(\"tercen.workflowId\")\ngetOption(\"tercen.stepId\")\nrenv::init()"},{"path":"improving-an-operator.html","id":"improving-an-operator","chapter":"7 Improving an operator","heading":"7 Improving an operator","text":"Now deployed R operator Tercen, can always improve ! chapter see catch errors, add input parameters (properties), prepare testing linear regression operator.","code":""},{"path":"improving-an-operator.html","id":"error-catching","chapter":"7 Improving an operator","heading":"Error catching","text":"1. Check presence input projectionFor lm_operator, can check x y axes set projection, return error message help user. can using try() function.2. Catch errors key processesWe can also use try() function catch potential errors key processes operator. example, can example catch error occuring running lm() function. , return coefficients model ran successfully. Otherwise, NaN returned.","code":"\nctx <- tercenCtx()\n\nif(inherits(try(ctx$select(\".x\")), 'try-error')) stop(\"x axis is missing.\")\nif(inherits(try(ctx$select(\".y\")), 'try-error')) stop(\"y axis is missing.\")\ndo.lm <- function(df) {\n  out <- data.frame(\n    .ri = df$.ri[1],\n    .ci = df$.ci[1],\n    intercept = NaN,\n    slope = NaN\n  )\n  mod <- try(lm(.y ~ .x, data = df))    # try-catch\n  if(!inherits(mod, 'try-error')) {     # get coefficients if lm ran succesfully\n    out$intercept <- mod$coefficients[1]\n    out$slope <- mod$coefficients[2]\n  }\n  return(out)\n}"},{"path":"improving-an-operator.html","id":"adding-properties","chapter":"7 Improving an operator","heading":"Adding properties","text":"Tercen operators can take input parameters (called properties). can different types (boolean, enumerated, numeric).example, let’s see add property lm_operator. add parameter decide whether omit intercept model .1. Modify operator’s JSON file add properties.property, set values different attributes:kind: property kind (BooleanProperty, DoubleProperty, EnumeratedProperty)kind: property kind (BooleanProperty, DoubleProperty, EnumeratedProperty)name: name displayed Tercenname: name displayed TercendefaultValue: default value taken propertydefaultValue: default value taken propertydescription: description displayed Tercendescription: description displayed TercenIn case, JSON file looks now like :2. Use property R codeThis property can called R operator code follows:","code":"{\n  \"name\": \"Linear regression\",\n  \"description\": \"Returns the intercept and slope of a linear regression in a cell\",\n  \"tags\": [\"linear model\"],\n  \"authors\": [\"tercen\"],\n  \"urls\": [\"https://github.com/agouy/lm_operator\"],\n  \"properties\": [\n  {\n    \"kind\": \"BooleanProperty\",\n    \"name\": \"intercept.omit\",\n    \"defaultValue\": false,\n    \"description\": \"A logical value indicating whether the intercept should be omitted in the model.\"\n  }\n  ]\n}\n  intercept.omit <- as.logical(ctx$op.value('intercept.omit'))\n  if(intercept.omit) {\n    mod <- try(lm(.y ~ .x - 1, data = df))\n  } else {\n    mod <- try(lm(.y ~ .x, data = df))\n  }"},{"path":"improving-an-operator.html","id":"preparing-operator-testing","chapter":"7 Improving an operator","heading":"Preparing operator testing","text":"’s always good prepare tests ran new version Tercen released.include test, need create test subdirectory project directory. must include:test input filea test input filean expected output filean expected output filea JSON file containing information testa JSON file containing information testFor example, test lm operator can created follow:Now input ouput files, can create JSON file shall include following information:name attribute free. Input output test files names must assigned inputDataUri inputDataUri, respectively. Variable names input file must assigned columns, rows, colors, labels, yAxis, xAxis attributes. case, colors labels left empty part input.","code":"\n# Simulate tercen input based on the CO2 dataset \n# with an x and y-axis, rows and columns\ndata(CO2)\ndf <- data.frame(.x = CO2$conc, .y = CO2$uptake, .ri = CO2$Plant, .ci = CO2$Treatment)\n\n# Run the do.lm() function created above to generate the expected output\nout <- df %>% select(.ci, .ri, .x, .y) %>%\n  group_by(.ri, .ci) %>%\n  do(do.lm(.))\n\n# write input and expected output in the test subdirectory\nwrite.csv(CO2, file=\"./test/CO2.csv\", row.names = FALSE, quote = FALSE)\nwrite.csv(out, file=\"./test/output.csv\", row.names = FALSE, quote = FALSE){\n  \"kind\": \"OperatorUnitTest\",\n  \"name\": \"testlm1\",\n  \"namespace\": \"test\",\n  \"inputDataUri\": \"CO2.csv\",\n  \"outputDataUri\": [\"output.csv\"],\n  \"columns\": [\"Treatment\"],\n  \"rows\": [\"Plant\"],\n  \"colors\": [],\n  \"labels\": [],\n  \"yAxis\": \"uptake\",\n  \"xAxis\": \"conc\"\n}"},{"path":"creating-a-shiny-operator.html","id":"creating-a-shiny-operator","chapter":"8 Creating a shiny operator","heading":"8 Creating a shiny operator","text":"easy create shiny operator. exactly like creating standard operator uses shiny framework.example simple shiny found :https://github.com/tercen/heatmap_shiny_operatorIn Tercen, shiny app can three modes, modes reflect three states shiny operator.showrunshowResultThe first mode “show” initial mode shiny operator added cross-tab view.second mode “run” shiny executed.third mode “showResult” results executed shiny presented. example, result maybe new graph based computation performed run.good example three modes go \nhttps://github.com/tercen/shiny_operator2","code":""},{"path":"creating-a-docker-operator.html","id":"creating-a-docker-operator","chapter":"9 Creating a docker operator","heading":"9 Creating a docker operator","text":"R packages require additional system libraries might installed\nTercen environment. can install locally, problem persists:tell Tercen install dependencies installing operator?solution create docker container environment. \nfamiliar Docker, highly recommended read \nGet started Docker guide.","code":""},{"path":"creating-a-docker-operator.html","id":"create-the-r-operator-locally","chapter":"9 Creating a docker operator","heading":"Create the R operator locally","text":"example, use worldmap Tercen operator.\nrequires R package sf, commonly used plot maps. package requires\nexternal system dependency, GDAL, depending UDUNIT2.able install R package don’t \ndependencies installed system. install package Tercen Studio,\nsimply need run command terminal:operator running locally (see section Running docker operators locally),\ncan prepare docker operator.","code":"apt-get -y update && apt-get install -y libudunits2-dev libgdal-dev"},{"path":"creating-a-docker-operator.html","id":"create-the-docker-operator","chapter":"9 Creating a docker operator","heading":"Create the docker operator","text":"First, create second GitHub repository hold code used build image:template Shiny Docker operator can found : https://github.com/tercen/shiny_docker_operatorA template Shiny Docker operator can found : https://github.com/tercen/shiny_docker_operatorThe worldmap docker operator can found : https://github.com/tercen/shiny_worldmap_docker_operatorThe worldmap docker operator can found : https://github.com/tercen/shiny_worldmap_docker_operatorIt contains different files:Dockerfile: instructions build Docker containerDockerfile: instructions build Docker containerREADME.md: document operatorREADME.md: document operatoroperator.json:operator.json:start.R: internal, modified.start.R: internal, modified.worldmap operator, Dockerfile look like :template, need :indicate git repository containing R operator (, https://github.com/tercen/shiny_worldmap_operator.git)indicate git repository containing R operator (, https://github.com/tercen/shiny_worldmap_operator.git)modify working directory (/operator/shiny_worldmap_operator, based GitHub repository name)modify working directory (/operator/shiny_worldmap_operator, based GitHub repository name)modify tag (, 0.0.5)modify tag (, 0.0.5)add commands install dependencies:add commands install dependencies:Finally, need modify operator.json docker operator file.Pay attention two following lines:\"container\": \"agouy/worldmap:0.0.5\" used indicate account, name tag docker container,\"container\": \"agouy/worldmap:0.0.5\" used indicate account, name tag docker container,\"isWebApp\": true handling Shiny app.\"isWebApp\": true handling Shiny app.","code":"FROM tercen/dartrusttidy:1.0.7\n\nUSER root\nWORKDIR /operator\n\nRUN apt-get update\nRUN apt-get install -y libudunits2-dev\nRUN apt-get update\nRUN apt-get install -y libgdal-dev\n\nRUN git clone https://github.com/tercen/shiny_worldmap_operator.git\n\nWORKDIR /operator/shiny_worldmap_operator\n\nRUN echo 0.0.5 && git pull\nRUN git checkout 0.0.5\n\nRUN R -e \"renv::restore(confirm=FALSE)\"\n\nENV TERCEN_SERVICE_URI https://tercen.com\n\nCOPY start.R /start.R\n\nENTRYPOINT [ \"R\",\"--no-save\",\"--no-restore\",\"--no-environ\",\"--slave\",\"-f\",\"/start.R\"]RUN apt-get update\nRUN apt-get install -y libudunits2-dev\nRUN apt-get update\nRUN apt-get install -y libgdal-dev{\n  \"name\": \"Worldmap\",\n  \"description\": \"Shiny world map representation\",\n  \"tags\": [\"map\"],\n  \"authors\": [\"tercen\"],\n  \"urls\": [\"https://github.com/tercen/shiny_worldmap_docker_operator\"],\n  \"container\": \"agouy/worldmap:0.0.5\",\n  \"isWebApp\": true\n}"},{"path":"creating-a-docker-operator.html","id":"build-and-push-docker-image","chapter":"9 Creating a docker operator","heading":"Build and push docker image","text":"already one, create account Docker Hub.already one, create account Docker Hub.Install Docker machine: install DockerInstall Docker machine: install DockerLogin Docker Hub using docker login command credentials. [Refer docker login docs complete reference]Login Docker Hub using docker login command credentials. [Refer docker login docs complete reference]Build image docker build command (ACCOUNT account name, REPO image name TAG tag)Finally, push image hub.","code":"docker login --username=YOURUSERNAME --password=YOURPASSWORDdocker build -t $ACCOUNT/$REPO:$TAG .sudo docker push $ACCOUNT/$REPO:$TAG"},{"path":"creating-a-docker-operator.html","id":"running-docker-operators-locally","chapter":"9 Creating a docker operator","heading":"Running docker operators locally","text":"wish test docker operator local Tercen, require activate docker capability Tercen Studio changing docker-compose.yaml file Tercen Studio setup.Please check docker-compose.yaml file, found main installation folder Tercen Studio.steps modify file :First stop dockers:docker-compose downEdit docker-compose.yaml file, read comments within file, set lines require uncommented. default commented :example activate Ubuntu system, settings may differ windows, please check support@tercen.com.saved file, start dockers.docker-compose -dThese modification allow Tercen Studio run operators using dockers.","code":"#    environment:\n#      - tercen.log.level=\"0\"\n# needed for docker operators, 172.17.0.1 is the default docker gateway\n#      - tercen.public.client.uri=http://172.17.0.1:5402\n#      - tercen.worker.public.ip=172.17.0.1"},{"path":"creating-a-docker-operator.html","id":"integrating-any-code-e.g.-c","chapter":"9 Creating a docker operator","heading":"Integrating any code (e.g. C++)","text":"algorithm code R. consider following example, highlights operator written C++ called atsne approximate tsne.implemented Tercen using two concepts, one operator one docker.atsne_operatoran atsne_dockerThe atsne_operator calls C++ code implemented atsne_docker.Please check repository (click links ) see configured.","code":""},{"path":"continuous-integration.html","id":"continuous-integration","chapter":"10 Continuous integration","heading":"10 Continuous integration","text":"Coming soon.","code":""},{"path":"common-patterns.html","id":"common-patterns","chapter":"11 Common patterns","heading":"11 Common patterns","text":"section outlines common development patterns encountered developing\noperators Tercen.","code":""},{"path":"common-patterns.html","id":"output-data","chapter":"11 Common patterns","heading":"11.1 Output data","text":"","code":""},{"path":"common-patterns.html","id":"one-table","chapter":"11 Common patterns","heading":"11.1.1 One table","text":"Coming soon.Example: Mean operator \nlm operator.","code":""},{"path":"common-patterns.html","id":"list-of-tables","chapter":"11 Common patterns","heading":"11.1.2 List of tables","text":"Coming soon.Example: PCA operator.","code":""},{"path":"common-patterns.html","id":"serialised-r-object","chapter":"11 Common patterns","heading":"11.1.3 Serialised R object","text":"Coming soon.Example: FlowSOM operator.","code":""},{"path":"common-patterns.html","id":"serialised-file","chapter":"11 Common patterns","heading":"11.1.4 Serialised file","text":"Coming soon.Example: Barplot operator.","code":""},{"path":"common-patterns.html","id":"output-relations","chapter":"11 Common patterns","heading":"11.2 Output relations","text":"","code":""},{"path":"common-patterns.html","id":"per-cell","chapter":"11 Common patterns","heading":"11.2.1 Per Cell","text":"Example: Mean operator, lm operator.","code":""},{"path":"common-patterns.html","id":"per-row-per-column","chapter":"11 Common patterns","heading":"11.2.2 Per Row / Per Column","text":"two typical cases creating relation per row per column :output computed per observation. case clustering\nalgorithms assign observation cluster ID.output computed per observation. case clustering\nalgorithms assign observation cluster ID.computed per variable. example, want scale values \nperform, operation per variable stratifying factor dataset.computed per variable. example, want scale values \nperform, operation per variable stratifying factor dataset.Example: PCA operator.","code":""},{"path":"common-patterns.html","id":"no-relation","chapter":"11 Common patterns","heading":"11.2.3 No relation","text":"useful relation needs made computed values existing\ndata. example, can consider two cases relevant:operator computes end result linked individual input\ndata pointsthe computation must available linked data point (example,\nwant generate constant can used together data)Example: Constant operator.","code":""},{"path":"building-a-template.html","id":"building-a-template","chapter":"12 Building a template","heading":"12 Building a template","text":"template workflow perfect users wish reuse workflow perform\ncomplete analysis.building template require programming.process building template :Design templateCreate workflow TercenTest input dataCreate template folder projectMove workflow template folderDownload template projectCreate github upload templateTag githubNotify community existence (see )building deployment steps performed Tercen.templates git repository installable, git URL tag version number required researcher install Tercen.","code":""},{"path":"building-an-app.html","id":"building-an-app","chapter":"13 Building an app","heading":"13 Building an app","text":"","code":""},{"path":"building-an-app.html","id":"the-app-concept","chapter":"13 Building an app","heading":"13.1 The app concept","text":"app perfect users wish tot focused module analysis\nmultiple operators views (e.g. PCA).building app require programming.","code":""},{"path":"building-an-app.html","id":"creating-an-app","chapter":"13 Building an app","heading":"13.2 Creating an app","text":"process building app :Design appCreate app TercenInsert Wizard step (optional)Replace initial Table step Input stepAdd final Output stepSave itCreate app folder project areaMove workflow app folderTest workflow dataDownload workflowCreate github repositoryUpload appTag repositoryNotify community existence (see )building deployment processes performed Tercen.apps git repository installable, git URL \ntag version number required researcher install Tercen.","code":""},{"path":"naming.html","id":"naming","chapter":"14 Development guidelines","heading":"14 Development guidelines","text":"","code":""},{"path":"naming.html","id":"operator-naming-convention","chapter":"14 Development guidelines","heading":"Operator naming convention","text":"art naming fundamental programming guidelines help.examples operator names:median_operatorflowsom_operator , flowsom R package flowsomboxplot_shiny_operator, using R shinyThese examples follow naming guidelines, recommended structure operator name :FUNCTION_TYPE_operatorIt essentially list parts separated underscore.FUNCTION operator always indicated rest depends \noperator context.","code":""},{"path":"naming.html","id":"github-repository","chapter":"14 Development guidelines","heading":"GitHub repository","text":"Please make sure git repository description outlines brief functional\ndescription operator. e.g. calculates median.","code":""},{"path":"tim.html","id":"tim","chapter":"15 Using tim","heading":"15 Using tim","text":"Coming soon.","code":""},{"path":"common-operator-issues.html","id":"common-operator-issues","chapter":"16 Common operator issues","heading":"16 Common operator issues","text":"Coming soon.","code":""},{"path":"ci-and-github-actions.html","id":"ci-and-github-actions","chapter":"17 CI and Github Actions","heading":"17 CI and Github Actions","text":"","code":""},{"path":"ci-and-github-actions.html","id":"test-not-found","chapter":"17 CI and Github Actions","heading":"17.1 Test not found","text":"operator.run.test..found","code":""},{"path":"ci-and-github-actions.html","id":"wrong-relations","chapter":"17 CI and Github Actions","heading":"17.2 Wrong relations","text":"task.test.operator.bad.nRelations","code":""},{"path":"ci-and-github-actions.html","id":"wrong-ncols-nrows","chapter":"17 CI and Github Actions","heading":"17.3 Wrong nCols / nRows","text":"task.test.operator.bad.nCols\ntask.test.operator.bad.nRows","code":""},{"path":"ci-and-github-actions.html","id":"wrong-column-names","chapter":"17 CI and Github Actions","heading":"17.4 Wrong column names","text":"task.test.operator.bad.column.namesMaybe ’ve added renamed column latest version operator? \ncase, reference table updated accordingly.","code":""},{"path":"ci-and-github-actions.html","id":"wrong-column-type","chapter":"17 CI and Github Actions","heading":"17.5 Wrong column type","text":"task.test.operator.bad.column.typeCheck .ri .ci factors output integers operators.another factor (example, cluster ID), tercen test expect \ndouble. case, need provide schema file. use\ntim genenerate test, can use XXX argument build_test_data\nfunction.","code":""},{"path":"ci-and-github-actions.html","id":"wrong-values","chapter":"17 CI and Github Actions","heading":"17.5.1 Wrong values","text":"task.test.operator.bad.valueThis error occurs value value different reference table \ncomputed table. gives row number values help\nfinding issue.","code":""},{"path":"ci-and-github-actions.html","id":"wrong-correlation","chapter":"17 CI and Github Actions","heading":"17.5.2 Wrong correlation","text":"task.test.operator.bad.correlation","code":""},{"path":"ci-and-github-actions.html","id":"untrusted-git","chapter":"17 CI and Github Actions","heading":"17.5.3 Untrusted git","text":"tercen.forbidden.untrusted.git","code":""},{"path":"next-steps.html","id":"next-steps","chapter":"18 Next steps","heading":"18 Next steps","text":"ideas:Try code different operators using teRcen R package, Note \nusing R Studio auto-complete type methods Tercen\nclient tercen query object.Give feedback developer’s guide creating issueGive feedback Tercen sending email support@tercen.comContact us one-2-one session","code":""},{"path":"glossary.html","id":"glossary","chapter":"Glossary","heading":"Glossary","text":"App:\nsmall workflow composed steps, visuals operators. Typically \nachieves one task, e.g. PCA app. PCA app composed one result visual\none computation one data wrangling step.App library:\nrepository Tercen components.Component:\nplug-Tercen. can operator, app, template.Cross-tab view:\nTercen interface window define projection view (.e. :\nrow, col, y-axis, x-axis, color, label).Long format:\nformat every row measurement.Measurement: numerical variableObservation: observation factor name given value (measurement),\nparticular moment time, particular variable.Operator:\noperator computes data supplied projection view defined using cross-tab window.Projection:\nprojection defined using cross-tab window.Step:\nsingle step allows visual projection optionally \ncomputation using operator.Template:\ntemplatised workflow.Variable: variable characteristic unit observed may\nassume one set values numerical measure \ncategory classification can assigned (e.g. income, age, weight, etc.,\n“occupation”, “industry”, “disease”, etc.Wide format:\nformat every column variable.Workflow:\nsequence steps apps achieve analysis pipeline.","code":""},{"path":"tercen-studio.html","id":"tercen-studio","chapter":"Tercen Studio","heading":"Tercen Studio","text":"","code":""},{"path":"tercen-studio.html","id":"updating-tercen-studio","chapter":"Tercen Studio","heading":"Updating tercen-studio","text":"can update tercen-studio running:","code":"# stop tercen_studio\ndocker-compose down        \n# get tercen_studio latest version           \ngit pull\ndocker-compose pull\n# start tercen_studio\ndocker-compose up -d"},{"path":"tercen-studio.html","id":"uninstallation-of-tercen-studio","chapter":"Tercen Studio","heading":"Uninstallation of tercen-studio","text":"uninstall tercen-studio, need run:","code":"docker-compose down\n\n# check tercen docker volumes names\ndocker volume ls\n\n# delete tercen docker volumes\ndocker volume rm tercen_studio_couchdb-data\ndocker volume rm tercen_studio_tercen-data\ndocker volume rm tercen_studio_tercen-studio-data\ndocker volume rm tercen_studio_tercen-studio-renv"},{"path":"tercen-studio.html","id":"building-tercen-studio","chapter":"Tercen Studio","heading":"Building tercen-studio","text":"need build tercen-studio, run following code:","code":"cd docker\ndocker build -t tercen/tercen_studio:0.9.2.9 .\ndocker history --no-trunc tercen_studio:0.9.2.9\ndocker push tercen/tercen_studio:0.9.2.9"}]
